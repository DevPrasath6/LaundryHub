apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: smart-laundry-ingress
  namespace: smart-laundry
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/websocket-services: "api-gateway"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - smart-laundry.yourdomain.com
    - api.smart-laundry.yourdomain.com
    secretName: smart-laundry-tls
  rules:
  - host: smart-laundry.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 80
  - host: api.smart-laundry.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-gateway
            port:
              number: 3000
---
# Additional ingress for local development
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: smart-laundry-local-ingress
  namespace: smart-laundry
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: localhost
    http:
      paths:
      - path: /app(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 80
      - path: /api(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: api-gateway
            port:
              number: 3000
---
# Network Policy for enhanced security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: smart-laundry-network-policy
  namespace: smart-laundry
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          name: smart-laundry
  - ports:
    - protocol: TCP
      port: 3000  # API Gateway
    - protocol: TCP
      port: 80    # Frontend
  egress:
  - to: []  # Allow all outbound traffic
---
# Pod Disruption Budget for API Gateway
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: api-gateway-pdb
  namespace: smart-laundry
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: api-gateway
---
# Pod Disruption Budget for Laundry Service
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: laundry-service-pdb
  namespace: smart-laundry
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: laundry-service
---
# Resource Quota for namespace
apiVersion: v1
kind: ResourceQuota
metadata:
  name: smart-laundry-quota
  namespace: smart-laundry
spec:
  hard:
    requests.cpu: "4"
    requests.memory: 8Gi
    limits.cpu: "8"
    limits.memory: 16Gi
    persistentvolumeclaims: "5"
    services: "10"
    pods: "20"
---
# Limit Range for pods
apiVersion: v1
kind: LimitRange
metadata:
  name: smart-laundry-limits
  namespace: smart-laundry
spec:
  limits:
  - default:
      cpu: "500m"
      memory: "512Mi"
    defaultRequest:
      cpu: "125m"
      memory: "128Mi"
    type: Container
  - max:
      cpu: "2"
      memory: "2Gi"
    min:
      cpu: "50m"
      memory: "64Mi"
    type: Container
